{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/ProverbStore.js","../../src/Footer.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.58.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","export const ProverbStore = [\r\n  { text: \"Níor líon beannacht bolg riamh. -- A blessing never filled a belly\", mood: \"wise\" },\r\n  { text: \"Bíonn blas ar an mbeagán. -- A little of anything is tasty\", mood: \"neutral\" },\r\n  { text: \"Beatha duine a thoil -- Everyone to his own tastes\", mood: \"happy\" },\r\n  { text: \"Aithnítear cara i gcruatan. -- It is in hardship that a friend is recognised\", mood: \"happy\" },\r\n  { text: \"Bíonn caora dhubh ar an tréad is gile -- Even the whitest flock has a black sheep\", mood: \"neutral\" },\r\n  { text: \"Galar gan náire an tart. -- Thirst is a shameless disease\", mood: \"serious\" },\r\n\r\n  { text: \"Más maith leat do mholadh faigh bás: más maith leat do cháineadh pós. -- If you want to be praised, die: if you want to be criticized, marry\", mood: \"humorous\" },\r\n\r\n  { text: \"Ag duine féin is fearr a fhios cá luíonn an bhróg air. -- A person best knows where the shoe troubles him\", mood: \"thoughtful\" },\r\n  { text: \"Aithníonn ciaróg ciaróg eile.  -- It takes one to know one\", mood: \"humorous\" },\r\n\r\n  { text: \"An gad is giorra don scornach is túisce is ceart a scaoileadh. -- The knot nearest the throat is the the one to release first\", mood: \"wise\" },\r\n  { text: \"An lao ite i mbolg na bó. --Don't count your chickens before they're hatched\", mood: \"humorous\" },\r\n  { text: \"An luibh ná faightear is í a fhóireann. -- The herb that can't be found is the very one which works\", mood: \"thoughtful\" },\r\n  { text: \"An rud a chíonn an leanbh is é a níonn an leanbh. -- What the child sees the child does \", mood: \"wise\" },\r\n  { text: \"An rud a scríobhann an púca, léann sé féin é. -- What the ghost writes, the ghost reads\", mood: \"warning\" },\r\n  { text: \"An rud a théann i bhfad téann sé i bhfuaire. -- What goes on for a long time loses its attractiveness\", mood: \"thoughtful\" },\r\n  { text: \"An rud is annamh is iontach.\", mood: \"happy -- What's seldom is wonderful\" },\r\n  { text: \"An rud is measa le duine ar domhan n’fheadair sé nach é lár a leasa é.\", mood: \"wise -- The very thing a person dreads most in the world could be the best thing for him\" },\r\n  { text: \"An rud nach bhfuil leigheas air caithfear cur suas leis. -- What can't be cured must be endured\", mood: \"thoughtful\" },\r\n  { text: \"An rud nach féidir ní féidir é. -- The impossible cannot be done\", mood: \"wise\" },\r\n  { text: \"An t-uan ag múineadh méilí dá mháthair. -- The lamb teaching its mother how to bleat\", mood: \"humorous\" },\r\n  { text: \"An tslat nuair a chruann le haois is deacair í a shníomh ina gad. -- hen the rod hardens with age it's difficult to bend it\", mood: \"thoughtful\" },\r\n  { text: \"An té a bhfuil builín aige gheobhaidh sé scian lena ghearradh. -- The man who has a loaf will get a knife to cut it\", mood: \"humorous\" },\r\n  { text: \"An té a bhíonn amuigh fuarann a chuid. -- The one who is out, his share gets cold\", mood: \"wise\" },\r\n  { text: \"An té a bhíonn siúlach bíonn sé scéalach. -- Travellers have tales\", mood: \"wise\" },\r\n  { text: \"An té a bhíonn thuas óltar deoch air. -- When you're up, they drink to you\", mood: \"happy\" },\r\n  { text: \"An té a bhíonn thíos buailtear cos air. -- When you're down, they kick you\", mood: \"unlucky\" },\r\n  { text: \"An té a dtéann teist na mochóirí amach air ní cás dó codladh go headra. -- The person who gains the reputation of getting up early can sleep late\", mood: \"wise\" },\r\n  { text: \"An té a mbíonn an rath ar maidin air bíonn sé air tráthnóna. --  -- He who is lucky in the morning tends to be luck in the evening too\", mood: \"happy\" },\r\n  { text: \"An té nach bhfuil láidir ní foláir dó bheith glic. -- He who is not strong has to be clever\", mood: \"wise\" },\r\n  { text: \"An té nach mbeireann ar an ngnó beireann an gnó air. -- He who does not get a grip on the job, the job gets a grip on him\", mood: \"wise\" },\r\n  { text: \"An té nach nglacann comhairle glacfaidh sé comhrac. -- Whoever will not accept advice must accept strife\", mood: \"wise\" },\r\n\r\n  { text: \"An té nach trua leis do chás, ná déan do ghearán leis. -- He who does not sympathise with your plight, don't make your complaint to him\", mood: \"warning\" },\r\n{ text: \"Ar mhaithe leis féin a níos an cat crónán. -- The cat purrs to please itself\", mood: \"happy\" },\r\n{ text: \"Ar scath a chéile a mhaireann na daoine. -- People live in one another's shadow\", mood: \"wise\" },\r\n{ text: \"Bailíonn brobh beart. -- A little gathers to a lot\", mood: \"neutral\" },\r\n{ text: \"Beart gan leigheas, foighne is fearr dó. -- Patience is the best thing for an incurable situation\", mood: \"warning\" },\r\n\r\n{ text: \"Beatha teanga í a labhairt. -- It's the life of a language to speak it\", mood: \"wise\" },\r\n{ text: \"Beidh lá eile ag an bPaorach. -- Power will have another day\", mood: \"hopeful\" },\r\n{ text: \"Bliain le duine agus bliain ina choinne. -- One year with you, one against you\", mood: \"neutral\" },\r\n{ text: \"Breithnigh an abhainn sara dtéir ina cuilithe. -- Observe the river before you venture into its currents\", mood: \"wise\" },\r\n{ text: \"Briseann an dúchas trí shúile an chait. -- Nature breaks out through the eyes of the cat\", mood: \"neutral\" },\r\n{ text: \"Bíonn adharca fada ar na buaibh thar lear. -- Faraway cows have long horns\", mood: \"neutral\" },\r\n{ text: \"Bíonn an fhírinne searbh. -- Truth is often bitter \", mood: \"warning\" },\r\n\r\n\r\n{ text: \"Bíonn blas milis ar phraiseach na gcomharsan. -- The neighbours gruel tastes sweet\", mood: \"happy\" },\r\n\r\n{ text: \"Bíonn cead cainte ag fear caillte na himeartha. -- The man who has lost the match has permission to talk\", mood: \"wise\" },\r\n{ text: \"Bíonn dhá insint ar gach aon scéal. -- There are two sides to every story\", mood: \"neutral\" },\r\n{ text: \"Bíonn gach tosú lag. -- Every beginning is weak\", mood: \"neutral\" },\r\n{ text: \"Bíonn súil le muir ach ní bhíonn súil le huaigh. -- There is hope of coming back from the sea but none of coming back from the dead\", mood: \"wise\" },\r\n{ text: \"Cad a dhéanfadh mac an chait ach luch a mharú. -- Like father like son\", mood: \"neutral\" },\r\n{ text: \"Cailín ag Móir is Móir ag iarraidh déirce. -- Mór has a servant girl while she herself is out begging\", mood: \"humorous\" },\r\n{ text: \"Caora mhór an t-uan i bhfad. -- The lamb becomes a big heavy sheep over distance\", mood: \"neutral\" },\r\n{ text: \"Chonaic mé cheana thú, arsa an cat leis an mbainne te. -- I saw you before, as the cat said to the warm milk...\", mood: \"humorous\" },\r\n{ text: \"Ciall agus míchiall - dís ná gabhann le chéile. -- Sense and nonsense - two which do not go together\", mood: \"wise\" },\r\n{ text: \"Cuir an breac san eangach sula gcuire tú sa phota é. -- Put the trout in the net before you put it in the pot\", mood: \"humorous\" },\r\n{ text: \"Cuir síoda ar ghabhar - is gabhar fós é.-- Put silk on a goat, it's still a goat\", mood: \"humorous\" },\r\n{ text: \"D’ordaigh Dia cúnamh. -- God helps those who help themselves\", mood: \"hopeful\" },\r\n{ text: \"Doras feasa fiafraí. -- The door to wisdom is to ask questions\", mood: \"wise\" },\r\n{ text: \"Dá dhonacht é Séamas ba mheasa bheith ina éagmais. -- However bad Séamas is it would be worse to be without him\", mood: \"thoughtful\" },\r\n{ text: \"Dá fhad lá tagann oíche. -- However long the day, night comes\", mood: \"pensive\" },\r\n{ text: \"Dá mbeadh soineann go Samhain bheadh breall ar dhuine éigin. -- If it was fine till Halloween someone would be unhappy\", mood: \"humorous\" },\r\n{ text: \"Éire i bpáirt, Éire ar lár. -- Ireland divided is Ireland laid low\", mood: \"patriotic\" },\r\n{ text: \"Éist le fuaim na habhann agus gheobhair breac. -- Listen to the sound of the river and you will catch a trout\", mood: \"wise\" },\r\n{ text: \"Fear na bó faoina heireaball. -- The cows owner must go under her tail\", mood: \"humorous\" },\r\n{ text: \"Feileann spallaí do bhallaí chomh maith le clocha móra. -- Small shards suit as well as big stones for building walls\", mood: \"happy\" },\r\n{ text: \"Filleann an feall ar an bhfeallaire. -- The evil deed returns to the evildoer\", mood: \"thoughtful\" },\r\n{ text: \"Gach dalta mar oiltear. -- Every pupil is as he is trained\", mood: \"hopeful\" },\r\n\r\n{ text: \"Giorraíonn beirt bóthar. -- Two people shorten the road\", mood: \"humorous\" },\r\n{ text: \"Glacann fear críonna comhairle. -- A wise man accepts advice\", mood: \"wise\" },\r\n{ text: \"I dtosach na haicíde is fusa í a leigheas.-- It's at the beginning of the disease it is easiest to cure\", mood: \"thoughtful\" },\r\n{ text: \"dtus an mhála is ceart a bheith tíosach. -- It's at the beginning of the bag that one must be economical\", mood: \"practical\" },\r\n{ text: \"I ndiaidh a chéile a thógtar na caisleáin. -- Rome wasn't built in a day\", mood: \"hopeful\" },\r\n{ text: \"Imíonn an tuirse is fanann an tairbhe. -- Tiredness goes away and the benefit remains\", mood: \"motivational\" },\r\n{ text: \"Iomad den aithne a mheadaíonn an tarcaisne. -- Familiarity breeds contempt\", mood: \"wise\" },\r\n{ text: \"Is ait an mac an saol. -- Life is strange\", mood: \"happy\" },\r\n{ text: \"Is beo duine tar éis a bhuailte ach ní beo é tar éis a cháinte. -- A person is alive after being beaten but not after his good name is taken\", mood: \"philosophical\" },\r\n{ text: \"Is binn béal ina thost. -- Sweet to hear is a mouth which is silent\", mood: \"humorous\" },\r\n{ text: \"Is breá an ní an óige ach ní thagann sí faoi dhó. -- Youth is a fine thing but it does not come twice\", mood: \"nostalgic\" },\r\n{ text: \"Is báidhiúil iad lucht aoncheirde. -- Birds of a feather flock together\", mood: \"admiring\" },\r\n{ text: \"Is cuma nó muc duine gan seift. -- A shiftless person is the same as a pig\", mood: \"humorous\" },\r\n{ text: \"Is deacair ceann críonna a chur ar cholainn óg. -- It's hard to put a wise head on young shoulders\", mood: \"wise\" },\r\n{ text: \"Is deacair rogha a bhaint as dhá dhíogha -- It's hard to choose between two evils\", mood: \"wise\" },\r\n{ text: \"Is dána gach madra i ndoras a thí féin. -- Every dog is bold in his own doorway\", mood: \"humorous\" },\r\n{ text: \"Is dóigh le fear na buile gurb é féin fear na céille. -- The crazy man reckons he is the sensible one\", mood: \"thoughtful\" },\r\n{ text: \"Is fada an bóthar nach bhfuil casadh ann. -- It's a long road that has no turning\", mood: \"neutral\" },\r\n{ text: \"Is fada siar a théann iarsma an drochbhirt. -- The trail of a bad deed goes a long way\", mood: \"cautionary\" },\r\n{ text: \"Is fearr a bheith díomhaoin ná droch-ghnóthach. -- Better to be idle than up to no good\", mood: \"neutral\" },\r\n{ text: \"Is fearr an t-imreas ná an t-uaigneas. -- Arguing is better than loneliness\", mood: \"happy\" },\r\n{ text: \"Is fearr an tsláinte ná na táinte. -- Health is better than wealth\", mood: \"happy\" },\r\n{ text: \"Is fearr beagán den ghaol ná mórán den charthanas. -- A little relationship is better than a lot of charity\", mood: \"neutral\" },\r\n{ text: \"Is fearr cara sa chúirt ná punt sa sparán. -- Better a friend in court than a pound in the purse\", mood: \"neutral\" },\r\n{ text: \"Is fearr go mall ná go brách. -- Better late than never\", mood: \"neutral\" },\r\n{ text: \"Is fearr leath ná meath. -- Half is better than nothing (literally: decaying)\", mood: \"neutral\" },\r\n{ text: \"Is fearr lán doirn de cheird ná lán mála d’ór. -- A fistful of a trade is better than a bagful of gold\", mood: \"neutral\" },\r\n{ text: \"Is fearr mac le himirt ná mac le hól. --  -- Better to have a son mad for sport than mad for drink\", mood: \"neutral\" },\r\n{ text: \"Is fearr marcaíocht ar ghabhar ná coisíocht dá fheabhas. --  -- Better to ride on a goat than the finest walking\", mood: \"neutral\" },\r\n{ text: \"Is fearr rith maith ná drochsheasamh. -- A good run is better than a bad stand\", mood: \"happy\" },\r\n{ text: \"Is fearr súil le glas ná súil le huaigh. -- Better to look forward to prison than to the grave\", mood: \"neutral\" },\r\n{ text: \"Is fearr súil romhat ná dhá shúil i do dhiaidh. -- Better one look before you than two behind\", mood: \"neutral\" },\r\n{ text: \"Is furasta fuineadh in aice na béile. -- It's easy to knead next to the mill\", mood: \"happy\" },\r\n{ text: \"Is gaire cabhair Dé ná an doras. -- God's help is nearer than the door\", mood: \"happy\" },\r\n{ text: \"Is geal gach nua agus is searbh gach gnáth. -- Every novelty is great and every commonplace is bitter\", mood: \"neutral\" },\r\n{ text: \"Is geal leis an bhfiach dubh a ghearrcach féin. -- The black raven thinks its own offspring is bright\", mood: \"happy\" },\r\n{ text: \"Is geall le scíth malairt oibre. -- A change of work is as good as a rest\", mood: \"neutral\" },\r\n{ text: \"Is glas iad na cnoic i bhfad uainn. -- Faraway hills are green\", mood: \"neutral\" },\r\n{ text: \"Is iad na muca ciúine a itheann an mhin. -- It's the quiet pigs who eat the meal.\", mood: \"neutral\" },\r\n{ text: \"Is in ithe na putóige a bhíonn a tástáil. -- The proof of the pudding is in the eating\", mood: \"neutral\" },\r\n{ text: \"Is iomaí cor a chuireann an saol de. -- Life goes through many twists and turns\", mood: \"wise\" },\r\n{ text: \"Is leor nod don eolach. -- A nod is enough to the wise\", mood: \"confident\" },\r\n{ text: \"Is leor ó Mhór a dícheall. -- All anyone can do is his best\", mood: \"motivational\" },\r\n{ text: \"Is lia gach othar i ndiaidh a leighis. -- Every patient is a surgeon after he is cured\", mood: \"cautionary\" },\r\n{ text: \"Is lú ná fríd máthair an oilc. -- It takes very little to cause trouble\", mood: \"humorous\" },\r\n{ text: \"Is mairg a dheanann deimhin dá dhóchas. -- Woe to he who checks out what he hopes to be true\", mood: \"thoughtful\" },\r\n{ text: \"Is mairg a dhéanann an t-olc is a bhíonn bocht ina dhiaidh. -- Woe to the one who does evil and does not profit by it\", mood: \"cautionary\" },\r\n{ text: \"Is maith an scáthán súil charad. -- A friend's eye is a good mirror\", mood: \"wise\" },\r\n{ text: \"Is maith an scéalaí an aimsir. -- Time will tell\", mood: \"wise\" },\r\n{ text: \"Is maith an t-anlann an t-ocras. -- Hunger is a good sauce\", mood: \"wise\" },\r\n{ text: \"Is maith an t-iománaí an té a bhíonn ar an gclaí. -- The hurler on the ditch is a great fellow\", mood: \"motivational\" },\r\n{ text: \"Is maith le Dia féin cúnamh. -- God himself likes a bit of help\", mood: \"religious\" },\r\n{ text: \"Is maol gualainn gan bhráthair. -- A shoulder without a friend is undefended\", mood: \"humorous\" },\r\n{ text: \"Is minic a bhris béal duine a shrón. -- It's often a person's mouth broke his nose\", mood: \"humorous\" },\r\n{ text: \"Is minic a bhí cú mhall sona. -- It's often a slow hound was content\", mood: \"happy\" },\r\n{ text: \"Is minic a gheall tailliúir is ná tiocfadh sé. -- It's often a tailor promised to come and did not\", mood: \"cautionary\" },\r\n{ text: \"Is minic ciúin ciontach . -- The quiet ones are often guilty\", mood: \"thoughtful\" },\r\n{ text: \"Is mór é luach na foighne. - Patience is worth a lot\", mood: \"wise\" },\r\n{ text: \"Is olc an chearc nach scríobann di féin. -- It's a poor hen won't scratch for itself\", mood: \"humorous\" },\r\n{ text: \"Is olc an ghaoth nach séideann do dhuine éigin. -- It's an ill wind blows nobody any good\", mood: \"cautionary\" },\r\n{ text: \"Is sleamhain an leac ag doras duine uasail. -- The flagstone is slippery at the door of a decent man\", mood: \"cautionary\" },\r\n{ text: \"Is treise dúchas ná oiliúint. -- Nature is stronger than training\", mood: \"wise\" },\r\n{ text: \"Is trom cearc i bhfad. -- A small burden grows heavier with distance\", mood: \"humorous\" },\r\n{ text: \"Is túisce deoch ná scéal. -- A small burden grows heavier with distance\", mood: \"happy\" },\r\n{ text: \"Is í an chiall cheannaigh an chiall is fearr. -- Sense bought dearly is the best kind\", mood: \"wise\" },\r\n{ text: \"Is í an dias is troime is ísle a chromann a ceann. -- It is the heaviest ear of corn which bows its head lowest\", mood: \"humorous\" },\r\n{ text: \"Mair a chapaill is gheobhair féar. -- Live horse and you will get hay\", mood: \"motivational\" },\r\n{ text: \"Maireann an chraobh ar an bhfál ach ní mhaireann an lámh a chuir. -- The branch lives on the fence but not the hand that planted it\", mood: \"wise\" },\r\n{ text: \"Maireann croí éadrom i bhfad. -- Light heart lives long \", mood: \"thoughtful\" },\r\n{ text: \"Marbh le tae agus marbh gan é. -- Can't live with it, can't live without it\", mood: \"serious\" },\r\n{ text: \"Mian mic a shúil. -- A child wants everything he sees\", mood: \"hopeful\" },\r\n{ text: \"Mol an óige agus tiocfaidh sí. -- Praise youth and youth will respond\", mood: \"hopeful\" },\r\n{ text: \"Mol gort is ná mol geamhar. -- Don't count your chickens before they are hatched\", mood: \"warning\" },\r\n{ text: \"Mura gcuirfidh tú san Earrach ní bhainfidh tú sa bhFómhar. -- If you don't sow in Spring you won't reap in Autumn\", mood: \"warning\" },\r\n{ text: \"Mura mbeadh agat ach pocán gabhair bí i lár an aonaigh leis. -- Even if you have only a puck goat to sell be in the middle of the fair with it\", mood: \"humorous\" },\r\n{ text: \"Más cam díreach an ród is é an bóthar mór an t-aicearra. -- Be it crooked or straight, it's the main road is the shortest way\", mood: \"wise\" },\r\n\r\n{ text: \"Más olc maol is measa mullach. -- If it's bad on the flat it's worse at the summit\", mood: \"warning\" },\r\n{ text: \"Múineann gá seift. -- Necessity teaches resourcefulness\", mood: \"instructional\" },\r\n{ text: \"Namhaid an cheird gan í a fhoghlaim. -- If you don't learn your trade, it becomes your enemy\", mood: \"wise\" },\r\n{ text: \"Nuair a bheidh do lámh i mbéal na con tarraing go réidh í. -- When your hand is in the hound's mouth withdraw it gently\", mood: \"instructional\" },\r\n{ text: \"Nuair a bhíonn an cat amuigh bíonn na lucha ag rince. -- When the cat's away the mice dance\", mood: \"descriptive\" },\r\n{ text: \"Nuair is crua don chailleach caithfidh sí rith. -- When it's tough for the hag she has to run\", mood: \"humorous\" },\r\n{ text: \"Nuair is gann é an bia is fial é a roinnt. -- When the food is scarce it's generous to share it\", mood: \"warning\" },\r\n{ text: \"Ná bac le mac an bhacaigh is ní bhacfaidh mac an bhacaigh leat. -- Mind your own business\", mood: \"instructional\" },\r\n{ text: \"Ná cuir do leas ar cairde. -- Don't procrastinate\", mood: \"instructional\" },\r\n{ text: \"Ná déan nós is ná bris nós. -- Don't make a custom and don't break a custom\", mood: \"instructional\" },\r\n{ text: \"Ná tabhair breith ar an gcéad scéal. -- Hear both sides before judgement\", mood: \"instructional\" },\r\n{ text: \"Ní bheathaíonn na breithre na braithre. -- Words alone won't feed the brothers\", mood: \"wise\" },\r\n{ text: \"Ní bhfuair minic onóir. -- Familiarity breeds contempt\", mood: \"disappointed\" },\r\n{ text: \"Ní bhíonn an rath ach mar a mbíonn an smacht. -- No success without discipline\", mood: \"wise\" },\r\n{ text: \"Ní bhíonn fear náireach éadálach. -- A shy man won't be rich\", mood: \"hopeful\" },\r\n{ text: \"Ní bhíonn in aon rud ach seal. -- Nothing lasts for ever\", mood: \"wise\" },\r\n{ text: \"Ní bhíonn tréan buan. -- The strong don't prevail for ever\", mood: \"wise\" },\r\n{ text: \"Ní breac é go raibh sé ar an bport. -- Don't count your fish till it's landed\", mood: \"humorous\" },\r\n{ text: \"Ní dhéanfadh an saol capall ráis d’asal.-- The world won't make a racehorse out of a donkey\", mood: \"wise\" },\r\n{ text: \"Ní dhéanfaidh smaoineamh an treabhadh duit. -- Thinking will not do the ploughing for you\", mood: \"serious\" },\r\n{ text: \"Ní fhaigheann lámh iata ach dorn dúnta. -- A closed hand gets nothing but a closed fist\", mood: \"serious\" },\r\n{ text: \"Ní fiú bheith ag seanchas agus an anachain déanta. -- No point in talking when the damage is done\", mood: \"wise\" },\r\n{ text: \"Ní féasta go rósta is ní céasta go pósta. -- It's not a feast without a roast and true suffering comes with marriage\", mood: \"humorous\" },\r\n{ text: \"Ní féidir bheith ag feadaíl is ag ithe mine. -- You can't whistle and eat meal at the same time\", mood: \"wise\" },\r\n{ text: \"Ní féidir leis an ngobadán an dá thrá a fhreastal. -- You can't be two places at once\", mood: \"humorous\" },\r\n{ text: \"Ní féidir é a bheith ina ghruth is ina mheadhg agat. -- You can't have it both ways\", mood: \"wise\" },\r\n{ text: \"Ní haithne go haontíos. -- You want to know me, come live with me\", mood: \"serious\" },\r\n{ text: \"Ní heaspa go díth carad. -- There is no lack so bad as the lack of a friend\", mood: \"serious\" },\r\n{ text: \"Ní hé lá na gaoithe lá na scolb. -- The windy day is not the day for thatching\", mood: \"wise\" },\r\n{ text: \"Ní ionann dul go tigh an rí agus teacht as. -- It's not the same thing to go to the king's house and to come out of it\", mood: \"wise\" },\r\n{ text: \"Ní lia duine ná tuairim. -- People are not more numerous than opinions\", mood: \"wise\" },\r\n{ text: \"Ní lia tír ná gnás. -- There are not more countries than there are customs\", mood: \"wise\" },\r\n{ text: \"Ní mar a shíltear a bhítear. -- Things aren't always what they seem\", mood: \"wise\" },\r\n{ text: \"Ní mhealltar an sionnach faoi dhó. -- You won't fool the fox a second time\", mood: \"wise\" },\r\n{ text: \"Ní neart go cur le chéile. -- There is no strength like co-operation\", mood: \"wise\" },\r\n{ text: \"Ní sia gob an ghé na gob an ghandail. -- The goose's beak is no longer than the gander's\", mood: \"humorous\" },\r\n{ text: \"Ní thagann ciall roimh aois. -- Sense does not come before age\", mood: \"wise\" },\r\n{ text: \"Ní théann dlí ar riachtanas. -- Necessity overrides the law\", mood: \"wise\" },\r\n{ text: \"Ní troimide an loch an lacha. -- The lake is not heavier for having the duck on it\", mood: \"wise\" },\r\n{ text: \"Níl aon tinteán mar do thinteán féin. -- No place like home \", mood: \"wise\" },\r\n{ text: \"Níl leigheas ar an gcathú ach é a mharú le foighne.-- There is no cure for regret but to kill it with patience\", mood: \"serious\" },\r\n{ text: \"Níl luibh ná leigheas in aghaidh an bháis. -- There is no herb or cure for death\", mood: \"serious\" },\r\n{ text: \"Níl saoi gan locht ná daoi gan tréith. -- There is no wise man without a fault nor any fool without a good feature\", mood: \"wise\" },\r\n{ text: \"Níl sprid ná puca nach bhfuil fios a chúise aige. -- There is no spirit nor ghost doesn't know his own business.\", mood: \"serious\" },\r\n{ text: \"Níl tuile dá mhéad nach dtránn. -- There is no flood, however great, that does not ebb away\", mood: \"wise\" },\r\n{ text: \"Níl íseal ná uasal ach thíos seal agus thuas seal. -- There is neither low not high but down for a while and up for a while.\", mood: \"wise\" },\r\n{ text: \"Níor bhris focal maith fiacail riamh. -- A good word never broke a tooth\", mood: \"wise\" },\r\n{ text: \"Níor chaill fear an mhisnigh riamh é. -- The man of courage never lost it\", mood: \"hopeful\" },\r\n\r\n{ text: \"Pós bean ón sliabh agus pósfaidh tú an sliabh ar fad. -- Marry a woman from the mountain and you will marry the entire mountain\", mood: \"humorous\" },\r\n{ text: \"Ritheann fear buile trí thuile go dána, ach is minic thug tuile fear buile le fána. -- A crazy man runs through a flood boldly, but it's often a flood swept a crazy man away\", mood: \"humorous\" },\r\n{ text: \"Sciúrdann éan as gach ealta. -- A bird flies out of every flock\", mood: \"humorous\" },\r\n{ text: \"Seachnaíonn súil an ní ná feiceann. -- An eye disregards what it does not see\", mood: \"cautionary\" },\r\n{ text: \"Síoda ar Shiobhán is na preabáin ar a hathair. -- Silk on Siobhán and her father in rags\", mood: \"humorous\" },\r\n{ text: \"Súil le breis a chailleann an cearrbhach -- Hoping to beats the odds is what ruins the gambler.\", mood: \"motivational\" },\r\n{ text: \"Tabhair rogha don bhodach agus is é an díogha a thoghfaidh sé. -- Give a choice to the churl and it's the worst he will pick\", mood: \"humorous\" },\r\n{ text: \"Tagann gach maith le cairde. -- No grace comes singly\", mood: \"happy\" },\r\n{ text: \"Taithí a dhéanann máistreacht. -- Practice makes perfect\", mood: \"wise\" },\r\n{ text: \"Tar éis a thuigtear gach beart. -- Hindsight is a great thing\", mood: \"thoughtful\" },\r\n{ text: \"Tarraingíonn scéal scéal eile. -- One story leads on to another\", mood: \"cautionary\" },\r\n{ text: \"Tosach sláinte codladh : deireadh sláinte osna. -- The beginning of health is sleep: the end of health is a sigh\", mood: \"humorous\" },\r\n{ text: \"Tuigeann Tadhg Taidhgín. -- Like understands like\", mood: \"humorous\" },\r\n{ text: \"Tír gan teanga tír gan anam. -- A country without a language is a country without a soul\", mood: \"patriotic\" },\r\n{ text: \"Tús maith leath na hoibre. -- A good start is half the work\", mood: \"motivational\" }\r\n]\r\n","\r\n\r\n    <style>\r\n      /* Set the footer styles */\r\n      footer {\r\n        position: fixed;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  background-color: #ffffff;\r\n  height: 50px;\r\n  font-weight: 600;\r\n  color: #333;\r\n  box-shadow: 1px 10px 10px 5px black;\r\njustify-content: center;\r\n  color: rgb(0, 0, 0);\r\n  text-align: center;\r\n  \r\n      }\r\n      .p\r\n      {\r\n        margin-top: 14px;\r\n\r\n      }\r\n\r\n      @media (max-width: 480px) {\r\n        .p\r\n      {\r\n        margin-top: 7px;\r\n        font-size: 10px;\r\n      }\r\n      footer\r\n      {\r\n        height: 30px;\r\n      }\r\n}\r\n    </style>\r\n\r\n\r\n    <!-- The footer -->\r\n    <footer>\r\n      <p class=\"p\">Made by Malachi Asgharian, Contact me at povaipad@gmail.com</p>\r\n    </footer>\r\n\r\n","\n<script>\n  import { ProverbStore } from './ProverbStore.js';\n;\n  import { createEventDispatcher } from 'svelte';\n  import Footer from './Footer.svelte';\n\n  const dispatch = createEventDispatcher();\n\n  let selectedMood = '';\n  let filteredProverbs = [];\n\n  function filterProverbs() {\n\n    filteredProverbs = ProverbStore.filter(proverb => {\n      return selectedMood === '' || proverb.mood === selectedMood;\n    });\n  }\n  let filteredPhrases = [];\n\n  function filterPhrases() {\n    filteredProverbs = ProverbStore.filter(proverb => {\n      return selectedMood === '' || proverb.mood === selectedMood;\n    });\n  }\n\tconsole.log(ProverbStore);\n  $: filterProverbs();\n\n  function handleChange(event) {\n    selectedMood = event.target.value;\n    dispatch('filterPhrases', selectedMood);\n    filterPhrases();\n    const cards = document.querySelectorAll('.card'); // Select all the divs with class 'card'\n    const min = 240; // Set the minimum color value to 200\n  const max = 250; // Set the maximum color value to 240\n  const greyValue = Math.floor(Math.random() * (max - min + 1) + min); // Generate a random grey value between 200 and 240\n  const randomColor = `rgb(${greyValue}, ${greyValue}, ${greyValue})`; // Use the same value for red, green, and blue channels to create a shade of grey\n\ncards.forEach(card => { // Loop through each card\n\n  card.style.backgroundColor = randomColor; // Set the background color of the card to the random color\n  card.style.opacity = 0;\n  card.style.animation = 'none'; // Reset the animation\n  setTimeout(() => {\n    card.style.animation = 'fade-in .5s ease-in-out forwards'; // Apply the animation after a delay\n    card.style.opacity = 1;\n  }, 100);\n\n\n});\n\n  }\n  import { onMount } from 'svelte';\n\n\n\n\n</script>\n\n<nav>\n  <div class=\"navbar\">\n    <div class=\"navbar-element\">\n      <a href=\"/\">Leithreas.com - All Irish proverbs in one place</a>\n    </div>\n  </div>\n</nav>\n\n\n\n\n\n\n\n<div class=\"container\">\n<select on:change={handleChange}>\n  <option value=\"\">All</option>\n\t<option value=\"wise\">Wise</option>\n\t<option value=\"thoughtful\">Thoughtful</option>\n\t<option value=\"cautionary\">Cautionary</option>\n\t<option value=\"serious\">Serious</option>\n\t<option value=\"instructional\">Instructional</option>\n\t<option value=\"motivational\">Motivational</option>\n\t<option value=\"hopeful\">Hopeful</option>\n\t<option value=\"happy\">Happy</option>\n\t<option value=\"neutral\">Neutral</option>\n\t<option value=\"humorous\">Humorous</option>\n\t<option value=\"warning\">Warning</option>\n</select>\n\n\n{#each filteredProverbs as proverb}\n  <div class=\"card\">{proverb.text}</div>\n{/each}\n\n</div>\n\n<Footer/>\n\n\n\n\n\n  <style>\n\n    nav {\n  background-color: #fff;\n  height: 80px;\n  display: flex;\n  align-items: center;\n  }\n\n  .navbar {\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  }\n\n\n  \n\n  nav {\n  background-color: #fff;\n  height: 80px;\n  display: flex;\n  align-items: center;\n}\n\n.navbar {\n  display: flex;\n  justify-content: center;\n  width: 100%;\n}\n\n.navbar-element {\n  margin: 0 20px;\n}\n\n.navbar-element a {\n  text-decoration: none;\n  font-size: 18px;\n  font-weight: 600;\n  color: #333;\n  text-align: center;;\n\n}\n\n.navbar-element a:hover {\n  color: #3498db;\n}\n  \n  </style>","import App from './App.svelte'\n\nconst app = new App({\n  target: document.body,\n})\n\nexport default app\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","attr","attribute","value","removeAttribute","getAttribute","setAttribute","current_component","set_current_component","component","createEventDispatcher","Error","get_current_component","type","detail","cancelable","callbacks","$$","event","bubbles","e","createEvent","initCustomEvent","custom_event","slice","call","defaultPrevented","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","length","update","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","mount_component","customElement","m","new_on_destroy","on_mount","map","filter","on_destroy","destroy_component","detaching","filtered","targets","c","indexOf","flush_render_callbacks","d","make_dirty","then","fill","init","options","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","index","splice","$set","$$props","obj","$$set","keys","ProverbStore","mood","footer","t_value","div","set_data","t","nav","div2","select","option0","option1","option2","option3","option4","option5","option6","option7","option8","option9","option10","option11","handler","addEventListener","removeEventListener","o","iterations","dispatch","selectedMood","filteredProverbs","console","log","$$invalidate","proverb","cards","querySelectorAll","greyValue","Math","floor","random","randomColor","card","style","backgroundColor","opacity","animation","setTimeout","body"],"mappings":"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"}